name: Deploy to GitHub Pages

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: write
  pages: write
  id-token: write

# Allow only one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  provision-runtimes:
    runs-on: ubuntu-latest
    outputs:
      runtimes-changed: ${{ steps.provision.outputs.changed }}
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: | 
            8.0.x
            9.0.x
      
      - name: Install jq
        run: sudo apt-get install -y jq
      
      - name: Run provisioning script
        id: provision
        run: |
          chmod +x ./scripts/provision-runtimes.sh
          if ./scripts/provision-runtimes.sh; then
            echo "changed=false" >> $GITHUB_OUTPUT
          else
            echo "changed=true" >> $GITHUB_OUTPUT
          fi
      
      - name: Check for changes
        id: check-changes
        run: |
          if git diff --quiet; then
            echo "has-changes=false" >> $GITHUB_OUTPUT
          else
            echo "has-changes=true" >> $GITHUB_OUTPUT
          fi
      
      - name: Commit runtime changes
        if: steps.check-changes.outputs.has-changes == 'true'
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add runtimes/
          git commit -m "chore: provision runtime files [skip ci]"
          git push

  build-example:
    runs-on: ubuntu-latest
    needs: provision-runtimes
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: main
      
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x
      
      - name: Build example app
        run: |
          cd example
          dotnet publish -c Release -o ../publish/example
      
      - name: Upload example artifact
        uses: actions/upload-artifact@v4
        with:
          name: example-app
          path: publish/example/wwwroot

  deploy:
    runs-on: ubuntu-latest
    needs: [provision-runtimes, build-example]
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: main
      
      - name: Download example app
        uses: actions/download-artifact@v4
        with:
          name: example-app
          path: _site/example
      
      - name: Copy runtime files
        run: |
          mkdir -p _site/runtimes
          if [ -d "runtimes" ] && [ "$(ls -A runtimes 2>/dev/null)" ]; then
            cp -r runtimes/* _site/runtimes/
          else
            echo "No runtime files to copy yet"
          fi
      
      - name: Create landing page from README
        run: |
          # Copy README as index.html for GitHub Pages
          cp README.md _site/index.md
      
      - name: Copy CNAME
        run: |
          cp CNAME _site/CNAME
      
      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: '_site'
      
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
